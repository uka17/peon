{
  "jobSchema": {
    "$id": "http://example.com/job",
    "type": "object",
    "properties": {
      "name": { "type": "string" },
      "description": { "type": "string" },
      "enabled": { "type": "boolean" },
      "steps": { "type": "array" },
      "schedules": { "type": "array" },
      "notifications": { "type": "array" },
      "nextRun": { "type": "string", "format": "date-time" }
    },
    "additionalProperties": false
  },

  "jobSchemaRequired": ["name", "enabled"],

  "stepSchema": {
    "$id": "http://example.com/step",
    "type": "object",
    "properties": {
      "name": { "type": "string" },
      "enabled": { "type": "boolean" },
      "order": { "type": "integer", "minimum": 1 },
      "connection": { "type": "integer", "minimum": 0 },
      "command": { "type": "string" },
      "onSucceed": {
        "oneOf": [
          { "enum": ["gotoNextStep", "quitWithSuccess", "quitWithFailure"] },
          {
            "type": "object",
            "properties": { "gotoStep": { "type": "integer", "minimum": 1 } },
            "additionalProperties": false
          }
        ]
      },
      "onFailure": {
        "oneOf": [
          { "enum": ["gotoNextStep", "quitWithSuccess", "quitWithFailure"] },
          {
            "type": "object",
            "properties": { "gotoStep": { "type": "integer", "minimum": 1 } },
            "additionalProperties": false
          }
        ]
      },
      "retryAttempts": {
        "type": "object",
        "properties": {
          "number": { "type": "integer", "minimum": 0, "maximum": 10 },
          "interval": { "type": "integer", "minimum": 1 }
        },
        "additionalProperties": false
      }
    },
    "additionalProperties": false
  },
  "stepSchemaRequired": [
    "name",
    "enabled",
    "order",
    "connection",
    "command",
    "onSucceed",
    "onFailure",
    "retryAttempts"
  ],
  "connectionSchema": {
    "$id": "http://example.com/connection",
    "type": "object",
    "properties": {
      "name": { "type": "string" },
      "host": { "type": "string" },
      "port": { "type": "integer", "minimum": 0, "maximum": 65536 },
      "database": { "type": "string" },
      "enabled": { "type": "boolean" },
      "login": { "type": "string" },
      "password": { "type": "string" },
      "type": { "enum": ["mongodb", "postgresql"] }
    },
    "additionalProperties": false
  },
  "connectionSchemaRequired": [
    "name",
    "host",
    "port",
    "database",
    "enabled",
    "login",
    "password",
    "type"
  ]
}
